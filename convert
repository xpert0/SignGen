#!/data/data/com.termux/files/usr/bin/bash

clear

echo -e "\e[1;31m {Allow Storage permission... If prompted press y and hit enter to continue... Carefully read and follow the instructions for success..}(To update this tool run) \e[0m"

echo -e "\e[1;32m cd && bash ~/SignGen/update \e[0m"

read -p "press any key and hit enter to continue ..."

termux-setup-storage

read -p "press any key and hit enter to continue ..."

clear

echo -e "\e[1;31m Script created by 4RCH1 H4CK3R \e[0m"

echo    

echo -e "\e[1;31m This script is only for Java keystore(.jks) files Generated with keystore explorer app (recommended)... \e[0m"

echo   

echo -e "\e[1;32m This script will automatically detect the required packages and install them if not available... Allow Storage permission to termux (If not allowed) before using this script... \e[0m"

echo   

echo -e "\e[1;34m The output file will be generated with the name privkey(private key), pcert(primary certificate) and with extension (.pk8), (.x509.pem). \e[0m"

echo "Please enter the location path of the directory (which contains your keystore file) below and hit enter..."

echo -e "\e[1;31m NOTE : There should be only one keystore file in the directory... \e[0m"

read my_var

echo   

mkdir /storage/emulated/0/tmp

echo -e "\e[1;33m NOTE 1: When asked for password write the alias password of the keystore file and hit enter everytime(total 5 times, enter import password twice)... NOTE 2: The password will not be visible for security reasons, so do not worry about that... \e[0m"

echo   

echo -e "\e[1;31m Have you read the instructions carefully ? \e[0m"

read -p "If yes press any key and hit enter to continue ..."

clear

cp -r ${my_var}/*.jks /storage/emulated/0/tmp

clear

pkg install openssl-tool -y

clear

pkg install openjdk-17 -y

clear

keytool -importkeystore -srckeystore /storage/emulated/0/tmp/*.jks -destkeystore /storage/emulated/0/tmp/key.p12 -srcstoretype JKS -deststoretype PKCS12

clear

openssl pkcs12 -in /storage/emulated/0/tmp/key.p12  -nokeys -out /storage/emulated/0/tmp/pcert.x509.pem

openssl pkcs12 -in /storage/emulated/0/tmp/key.p12 -nodes -out /storage/emulated/0/tmp/key.rsa.pem

clear

openssl pkcs8 -topk8 -outform DER -in /storage/emulated/0/tmp/key.rsa.pem -inform PEM -out /storage/emulated/0/tmp/privkey.pk8 -nocrypt

clear

echo "Please enter the output directory to save the file ..."

read my_var

rm -rff ${my_var}/pcert.x509.pem

rm -rff ${my_var}/privkey.pk8

cp -r /storage/emulated/0/tmp/pcert.x509.pem ${my_var}

cp -r /storage/emulated/0/tmp/privkey.pk8 ${my_var}

rm -rff  /storage/emulated/0/tmp

clear

echo -e "\e[1;32m ðŸ™‚ðŸ˜‡Thanks for using my scriptðŸ˜‡ðŸ˜Ž \e[0m"

cd
